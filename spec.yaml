name: poker-planning
# See https://www.digitalocean.com/docs/app-platform/#regional-availability for the available options
# You can get region slugs from https://www.digitalocean.com/docs/platform/availability-matrix/
# `fra` stands for Frankfurt (Germany - EU)
region: fra
alerts:
  - rule: DEPLOYMENT_FAILED
  - rule: DOMAIN_FAILED
services:
  - name: server
    # Relative to the repository root
    dockerfile_path: /server/Dockerfile
    source_dir: /server
    github:
      branch: main
      deploy_on_push: true
      repo: INQTR/poker-planning
    # Active probe used by DigitalOcean's to ensure our application is healthy
    health_check:
      # The path to our health check endpoint! It turned out to be useful in the end!
      http_path: /health_check
    # The port the application will be listening on for incoming requests
    # It should match what we specify in our configuration.yaml file!
    http_port: 8000
    # For production workloads we'd go for at least two!
    instance_count: 1
    # Let's keep the bill lean for now...
    instance_size_slug: basic-xxs
    # All incoming requests should be routed to our app
    routes:
      - path: /graphql
    envs:
      - key: APP_APPLICATION__BASE_URL
        scope: RUN_TIME
        value: /graphql
static_sites:
  - environment_slug: node-js
    envs:
      - key: VITE_GRAPHQL_ENDPOINT
        scope: BUILD_TIME
        value: /graphql
      - key: VITE_GRAPHQL_WS_ENDPOINT
        scope: BUILD_TIME
        value: /graphql
      - key: VITE_GOOGLE_ANALYTICS_ID
        scope: BUILD_TIME
        value: ${VITE_GOOGLE_ANALYTICS_ID}
    github:
      branch: main
      deploy_on_push: true
      repo: INQTR/poker-planning
    name: client
    catchall_document: index.html
    routes:
      - path: /
    source_dir: /client
